<?xml version="1.0" encoding="utf-8"?>
<gendarme-output date="15/01/2014 18:51:08">
  <files>
    <file Name="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">D:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\bin\Debug\SmallWorldCore.dll</file>
  </files>
  <rules>
    <rule Name="AvoidAssemblyVersionMismatchRule" Type="Assembly" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.BadPractice.AvoidAssemblyVersionMismatchRule(2.10)">Gendarme.Rules.BadPractice.AvoidAssemblyVersionMismatchRule</rule>
    <rule Name="AvoidCallingProblematicMethodsRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.BadPractice.AvoidCallingProblematicMethodsRule(2.10)">Gendarme.Rules.BadPractice.AvoidCallingProblematicMethodsRule</rule>
    <rule Name="AvoidVisibleConstantFieldRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.BadPractice.AvoidVisibleConstantFieldRule(2.10)">Gendarme.Rules.BadPractice.AvoidVisibleConstantFieldRule</rule>
    <rule Name="CheckNewExceptionWithoutThrowingRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.BadPractice.CheckNewExceptionWithoutThrowingRule(2.10)">Gendarme.Rules.BadPractice.CheckNewExceptionWithoutThrowingRule</rule>
    <rule Name="CheckNewThreadWithoutStartRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.BadPractice.CheckNewThreadWithoutStartRule(2.10)">Gendarme.Rules.BadPractice.CheckNewThreadWithoutStartRule</rule>
    <rule Name="CloneMethodShouldNotReturnNullRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.BadPractice.CloneMethodShouldNotReturnNullRule(2.10)">Gendarme.Rules.BadPractice.CloneMethodShouldNotReturnNullRule</rule>
    <rule Name="ConstructorShouldNotCallVirtualMethodsRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.BadPractice.ConstructorShouldNotCallVirtualMethodsRule(2.10)">Gendarme.Rules.BadPractice.ConstructorShouldNotCallVirtualMethodsRule</rule>
    <rule Name="DisableDebuggingCodeRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.BadPractice.DisableDebuggingCodeRule(2.10)">Gendarme.Rules.BadPractice.DisableDebuggingCodeRule</rule>
    <rule Name="DoNotForgetNotImplementedMethodsRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.BadPractice.DoNotForgetNotImplementedMethodsRule(2.10)">Gendarme.Rules.BadPractice.DoNotForgetNotImplementedMethodsRule</rule>
    <rule Name="DoNotUseEnumIsAssignableFromRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.BadPractice.DoNotUseEnumIsAssignableFromRule(2.10)">Gendarme.Rules.BadPractice.DoNotUseEnumIsAssignableFromRule</rule>
    <rule Name="DoNotUseGetInterfaceToCheckAssignabilityRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.BadPractice.DoNotUseGetInterfaceToCheckAssignabilityRule(2.10)">Gendarme.Rules.BadPractice.DoNotUseGetInterfaceToCheckAssignabilityRule</rule>
    <rule Name="EqualsShouldHandleNullArgRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.BadPractice.EqualsShouldHandleNullArgRule(2.10)">Gendarme.Rules.BadPractice.EqualsShouldHandleNullArgRule</rule>
    <rule Name="GetEntryAssemblyMayReturnNullRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.BadPractice.GetEntryAssemblyMayReturnNullRule(2.10)">Gendarme.Rules.BadPractice.GetEntryAssemblyMayReturnNullRule</rule>
    <rule Name="ObsoleteMessagesShouldNotBeEmptyRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.BadPractice.ObsoleteMessagesShouldNotBeEmptyRule(2.10)">Gendarme.Rules.BadPractice.ObsoleteMessagesShouldNotBeEmptyRule</rule>
    <rule Name="OnlyUseDisposeForIDisposableTypesRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.BadPractice.OnlyUseDisposeForIDisposableTypesRule(2.10)">Gendarme.Rules.BadPractice.OnlyUseDisposeForIDisposableTypesRule</rule>
    <rule Name="PreferEmptyInstanceOverNullRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.BadPractice.PreferEmptyInstanceOverNullRule(2.10)">Gendarme.Rules.BadPractice.PreferEmptyInstanceOverNullRule</rule>
    <rule Name="PreferSafeHandleRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.BadPractice.PreferSafeHandleRule(2.10)">Gendarme.Rules.BadPractice.PreferSafeHandleRule</rule>
    <rule Name="ReplaceIncompleteOddnessCheckRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.BadPractice.ReplaceIncompleteOddnessCheckRule(2.10)">Gendarme.Rules.BadPractice.ReplaceIncompleteOddnessCheckRule</rule>
    <rule Name="ToStringShouldNotReturnNullRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.BadPractice.ToStringShouldNotReturnNullRule(2.10)">Gendarme.Rules.BadPractice.ToStringShouldNotReturnNullRule</rule>
    <rule Name="DoNotLockOnThisOrTypesRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Concurrency.DoNotLockOnThisOrTypesRule(2.10)">Gendarme.Rules.Concurrency.DoNotLockOnThisOrTypesRule</rule>
    <rule Name="DoNotLockOnWeakIdentityObjectsRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Concurrency.DoNotLockOnWeakIdentityObjectsRule(2.10)">Gendarme.Rules.Concurrency.DoNotLockOnWeakIdentityObjectsRule</rule>
    <rule Name="DoNotUseMethodImplOptionsSynchronizedRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Concurrency.DoNotUseMethodImplOptionsSynchronizedRule(2.10)">Gendarme.Rules.Concurrency.DoNotUseMethodImplOptionsSynchronizedRule</rule>
    <rule Name="DoNotUseThreadStaticWithInstanceFieldsRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Concurrency.DoNotUseThreadStaticWithInstanceFieldsRule(2.10)">Gendarme.Rules.Concurrency.DoNotUseThreadStaticWithInstanceFieldsRule</rule>
    <rule Name="DoNotUseLockedRegionOutsideMethodRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Concurrency.DoNotUseLockedRegionOutsideMethodRule(2.10)">Gendarme.Rules.Concurrency.DoNotUseLockedRegionOutsideMethodRule</rule>
    <rule Name="DoubleCheckLockingRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Concurrency.DoubleCheckLockingRule(2.10)">Gendarme.Rules.Concurrency.DoubleCheckLockingRule</rule>
    <rule Name="NonConstantStaticFieldsShouldNotBeVisibleRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Concurrency.NonConstantStaticFieldsShouldNotBeVisibleRule(2.10)">Gendarme.Rules.Concurrency.NonConstantStaticFieldsShouldNotBeVisibleRule</rule>
    <rule Name="ProtectCallToEventDelegatesRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Concurrency.ProtectCallToEventDelegatesRule(2.10)">Gendarme.Rules.Concurrency.ProtectCallToEventDelegatesRule</rule>
    <rule Name="ReviewLockUsedOnlyForOperationsOnVariablesRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Concurrency.ReviewLockUsedOnlyForOperationsOnVariablesRule(2.10)">Gendarme.Rules.Concurrency.ReviewLockUsedOnlyForOperationsOnVariablesRule</rule>
    <rule Name="WriteStaticFieldFromInstanceMethodRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Concurrency.WriteStaticFieldFromInstanceMethodRule(2.10)">Gendarme.Rules.Concurrency.WriteStaticFieldFromInstanceMethodRule</rule>
    <rule Name="AttributeStringLiteralsShouldParseCorrectlyRule" Type="Assembly" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Correctness.AttributeStringLiteralsShouldParseCorrectlyRule(2.10)">Gendarme.Rules.Correctness.AttributeStringLiteralsShouldParseCorrectlyRule</rule>
    <rule Name="AvoidConstructorsInStaticTypesRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Correctness.AvoidConstructorsInStaticTypesRule(2.10)">Gendarme.Rules.Correctness.AvoidConstructorsInStaticTypesRule</rule>
    <rule Name="AvoidFloatingPointEqualityRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Correctness.AvoidFloatingPointEqualityRule(2.10)">Gendarme.Rules.Correctness.AvoidFloatingPointEqualityRule</rule>
    <rule Name="DoNotRecurseInEqualityRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Correctness.DoNotRecurseInEqualityRule(2.10)">Gendarme.Rules.Correctness.DoNotRecurseInEqualityRule</rule>
    <rule Name="BadRecursiveInvocationRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Correctness.BadRecursiveInvocationRule(2.10)">Gendarme.Rules.Correctness.BadRecursiveInvocationRule</rule>
    <rule Name="CallingEqualsWithNullArgRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Correctness.CallingEqualsWithNullArgRule(2.10)">Gendarme.Rules.Correctness.CallingEqualsWithNullArgRule</rule>
    <rule Name="DisposableFieldsShouldBeDisposedRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Correctness.DisposableFieldsShouldBeDisposedRule(2.10)">Gendarme.Rules.Correctness.DisposableFieldsShouldBeDisposedRule</rule>
    <rule Name="DoNotRoundIntegersRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Correctness.DoNotRoundIntegersRule(2.10)">Gendarme.Rules.Correctness.DoNotRoundIntegersRule</rule>
    <rule Name="DoNotCompareWithNaNRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Correctness.DoNotCompareWithNaNRule(2.10)">Gendarme.Rules.Correctness.DoNotCompareWithNaNRule</rule>
    <rule Name="EnsureLocalDisposalRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Correctness.EnsureLocalDisposalRule(2.10)">Gendarme.Rules.Correctness.EnsureLocalDisposalRule</rule>
    <rule Name="FinalizersShouldCallBaseClassFinalizerRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Correctness.FinalizersShouldCallBaseClassFinalizerRule(2.10)">Gendarme.Rules.Correctness.FinalizersShouldCallBaseClassFinalizerRule</rule>
    <rule Name="ReviewInconsistentIdentityRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Correctness.ReviewInconsistentIdentityRule(2.10)">Gendarme.Rules.Correctness.ReviewInconsistentIdentityRule</rule>
    <rule Name="MethodCanBeMadeStaticRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Correctness.MethodCanBeMadeStaticRule(2.10)">Gendarme.Rules.Correctness.MethodCanBeMadeStaticRule</rule>
    <rule Name="ProvideCorrectArgumentsToFormattingMethodsRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Correctness.ProvideCorrectArgumentsToFormattingMethodsRule(2.10)">Gendarme.Rules.Correctness.ProvideCorrectArgumentsToFormattingMethodsRule</rule>
    <rule Name="ProvideCorrectRegexPatternRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Correctness.ProvideCorrectRegexPatternRule(2.10)">Gendarme.Rules.Correctness.ProvideCorrectRegexPatternRule</rule>
    <rule Name="ProvideValidXmlStringRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Correctness.ProvideValidXmlStringRule(2.10)">Gendarme.Rules.Correctness.ProvideValidXmlStringRule</rule>
    <rule Name="ProvideValidXPathExpressionRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Correctness.ProvideValidXPathExpressionRule(2.10)">Gendarme.Rules.Correctness.ProvideValidXPathExpressionRule</rule>
    <rule Name="ReviewCastOnIntegerDivisionRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Correctness.ReviewCastOnIntegerDivisionRule(2.10)">Gendarme.Rules.Correctness.ReviewCastOnIntegerDivisionRule</rule>
    <rule Name="ReviewCastOnIntegerMultiplicationRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Correctness.ReviewCastOnIntegerMultiplicationRule(2.10)">Gendarme.Rules.Correctness.ReviewCastOnIntegerMultiplicationRule</rule>
    <rule Name="ReviewDoubleAssignmentRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Correctness.ReviewDoubleAssignmentRule(2.10)">Gendarme.Rules.Correctness.ReviewDoubleAssignmentRule</rule>
    <rule Name="ReviewSelfAssignmentRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Correctness.ReviewSelfAssignmentRule(2.10)">Gendarme.Rules.Correctness.ReviewSelfAssignmentRule</rule>
    <rule Name="ReviewUselessControlFlowRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Correctness.ReviewUselessControlFlowRule(2.10)">Gendarme.Rules.Correctness.ReviewUselessControlFlowRule</rule>
    <rule Name="ReviewUseOfInt64BitsToDoubleRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Correctness.ReviewUseOfInt64BitsToDoubleRule(2.10)">Gendarme.Rules.Correctness.ReviewUseOfInt64BitsToDoubleRule</rule>
    <rule Name="ReviewUseOfModuloOneOnIntegersRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Correctness.ReviewUseOfModuloOneOnIntegersRule(2.10)">Gendarme.Rules.Correctness.ReviewUseOfModuloOneOnIntegersRule</rule>
    <rule Name="UseValueInPropertySetterRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Correctness.UseValueInPropertySetterRule(2.10)">Gendarme.Rules.Correctness.UseValueInPropertySetterRule</rule>
    <rule Name="AvoidMethodWithUnusedGenericTypeRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.Generic.AvoidMethodWithUnusedGenericTypeRule(2.10)">Gendarme.Rules.Design.Generic.AvoidMethodWithUnusedGenericTypeRule</rule>
    <rule Name="DoNotExposeNestedGenericSignaturesRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.Generic.DoNotExposeNestedGenericSignaturesRule(2.10)">Gendarme.Rules.Design.Generic.DoNotExposeNestedGenericSignaturesRule</rule>
    <rule Name="ImplementGenericCollectionInterfacesRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.Generic.ImplementGenericCollectionInterfacesRule(2.10)">Gendarme.Rules.Design.Generic.ImplementGenericCollectionInterfacesRule</rule>
    <rule Name="PreferGenericsOverRefObjectRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.Generic.PreferGenericsOverRefObjectRule(2.10)">Gendarme.Rules.Design.Generic.PreferGenericsOverRefObjectRule</rule>
    <rule Name="UseGenericEventHandlerRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.Generic.UseGenericEventHandlerRule(2.10)">Gendarme.Rules.Design.Generic.UseGenericEventHandlerRule</rule>
    <rule Name="AvoidExtensionMethodOnSystemObjectRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.Linq.AvoidExtensionMethodOnSystemObjectRule(2.10)">Gendarme.Rules.Design.Linq.AvoidExtensionMethodOnSystemObjectRule</rule>
    <rule Name="AbstractTypesShouldNotHavePublicConstructorsRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.AbstractTypesShouldNotHavePublicConstructorsRule(2.10)">Gendarme.Rules.Design.AbstractTypesShouldNotHavePublicConstructorsRule</rule>
    <rule Name="AttributeArgumentsShouldHaveAccessorsRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.AttributeArgumentsShouldHaveAccessorsRule(2.10)">Gendarme.Rules.Design.AttributeArgumentsShouldHaveAccessorsRule</rule>
    <rule Name="AvoidMultidimensionalIndexerRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.AvoidMultidimensionalIndexerRule(2.10)">Gendarme.Rules.Design.AvoidMultidimensionalIndexerRule</rule>
    <rule Name="AvoidPropertiesWithoutGetAccessorRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.AvoidPropertiesWithoutGetAccessorRule(2.10)">Gendarme.Rules.Design.AvoidPropertiesWithoutGetAccessorRule</rule>
    <rule Name="AvoidVisibleFieldsRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.AvoidVisibleFieldsRule(2.10)">Gendarme.Rules.Design.AvoidVisibleFieldsRule</rule>
    <rule Name="AvoidRefAndOutParametersRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.AvoidRefAndOutParametersRule(2.10)">Gendarme.Rules.Design.AvoidRefAndOutParametersRule</rule>
    <rule Name="AvoidSmallNamespaceRule" Type="Assembly" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.AvoidSmallNamespaceRule(2.10)">Gendarme.Rules.Design.AvoidSmallNamespaceRule</rule>
    <rule Name="AvoidVisibleNestedTypesRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.AvoidVisibleNestedTypesRule(2.10)">Gendarme.Rules.Design.AvoidVisibleNestedTypesRule</rule>
    <rule Name="ConsiderAddingInterfaceRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.ConsiderAddingInterfaceRule(2.10)">Gendarme.Rules.Design.ConsiderAddingInterfaceRule</rule>
    <rule Name="ConsiderConvertingFieldToNullableRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.ConsiderConvertingFieldToNullableRule(2.10)">Gendarme.Rules.Design.ConsiderConvertingFieldToNullableRule</rule>
    <rule Name="ConsiderConvertingMethodToPropertyRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.ConsiderConvertingMethodToPropertyRule(2.10)">Gendarme.Rules.Design.ConsiderConvertingMethodToPropertyRule</rule>
    <rule Name="ConsiderUsingStaticTypeRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.ConsiderUsingStaticTypeRule(2.10)">Gendarme.Rules.Design.ConsiderUsingStaticTypeRule</rule>
    <rule Name="DeclareEventHandlersCorrectlyRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.DeclareEventHandlersCorrectlyRule(2.10)">Gendarme.Rules.Design.DeclareEventHandlersCorrectlyRule</rule>
    <rule Name="DisposableTypesShouldHaveFinalizerRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.DisposableTypesShouldHaveFinalizerRule(2.10)">Gendarme.Rules.Design.DisposableTypesShouldHaveFinalizerRule</rule>
    <rule Name="DoNotDeclareVirtualMethodsInSealedTypeRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.DoNotDeclareVirtualMethodsInSealedTypeRule(2.10)">Gendarme.Rules.Design.DoNotDeclareVirtualMethodsInSealedTypeRule</rule>
    <rule Name="DoNotDeclareProtectedMembersInSealedTypeRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.DoNotDeclareProtectedMembersInSealedTypeRule(2.10)">Gendarme.Rules.Design.DoNotDeclareProtectedMembersInSealedTypeRule</rule>
    <rule Name="EnsureSymmetryForOverloadedOperatorsRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.EnsureSymmetryForOverloadedOperatorsRule(2.10)">Gendarme.Rules.Design.EnsureSymmetryForOverloadedOperatorsRule</rule>
    <rule Name="EnumsShouldDefineAZeroValueRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.EnumsShouldDefineAZeroValueRule(2.10)">Gendarme.Rules.Design.EnumsShouldDefineAZeroValueRule</rule>
    <rule Name="EnumsShouldUseInt32Rule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.EnumsShouldUseInt32Rule(2.10)">Gendarme.Rules.Design.EnumsShouldUseInt32Rule</rule>
    <rule Name="FinalizersShouldBeProtectedRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.FinalizersShouldBeProtectedRule(2.10)">Gendarme.Rules.Design.FinalizersShouldBeProtectedRule</rule>
    <rule Name="FlagsShouldNotDefineAZeroValueRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.FlagsShouldNotDefineAZeroValueRule(2.10)">Gendarme.Rules.Design.FlagsShouldNotDefineAZeroValueRule</rule>
    <rule Name="ImplementEqualsAndGetHashCodeInPairRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.ImplementEqualsAndGetHashCodeInPairRule(2.10)">Gendarme.Rules.Design.ImplementEqualsAndGetHashCodeInPairRule</rule>
    <rule Name="ImplementIComparableCorrectlyRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.ImplementIComparableCorrectlyRule(2.10)">Gendarme.Rules.Design.ImplementIComparableCorrectlyRule</rule>
    <rule Name="InternalNamespacesShouldNotExposeTypesRule" Type="Assembly" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.InternalNamespacesShouldNotExposeTypesRule(2.10)">Gendarme.Rules.Design.InternalNamespacesShouldNotExposeTypesRule</rule>
    <rule Name="MainShouldNotBePublicRule" Type="Assembly" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.MainShouldNotBePublicRule(2.10)">Gendarme.Rules.Design.MainShouldNotBePublicRule</rule>
    <rule Name="MarkAssemblyWithAssemblyVersionRule" Type="Assembly" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.MarkAssemblyWithAssemblyVersionRule(2.10)">Gendarme.Rules.Design.MarkAssemblyWithAssemblyVersionRule</rule>
    <rule Name="MarkAssemblyWithCLSCompliantRule" Type="Assembly" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.MarkAssemblyWithCLSCompliantRule(2.10)">Gendarme.Rules.Design.MarkAssemblyWithCLSCompliantRule</rule>
    <rule Name="MarkAssemblyWithComVisibleRule" Type="Assembly" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.MarkAssemblyWithComVisibleRule(2.10)">Gendarme.Rules.Design.MarkAssemblyWithComVisibleRule</rule>
    <rule Name="MissingAttributeUsageOnCustomAttributeRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.MissingAttributeUsageOnCustomAttributeRule(2.10)">Gendarme.Rules.Design.MissingAttributeUsageOnCustomAttributeRule</rule>
    <rule Name="OperatorEqualsShouldBeOverloadedRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.OperatorEqualsShouldBeOverloadedRule(2.10)">Gendarme.Rules.Design.OperatorEqualsShouldBeOverloadedRule</rule>
    <rule Name="OverrideEqualsMethodRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.OverrideEqualsMethodRule(2.10)">Gendarme.Rules.Design.OverrideEqualsMethodRule</rule>
    <rule Name="PreferEventsOverMethodsRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.PreferEventsOverMethodsRule(2.10)">Gendarme.Rules.Design.PreferEventsOverMethodsRule</rule>
    <rule Name="PreferIntegerOrStringForIndexersRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.PreferIntegerOrStringForIndexersRule(2.10)">Gendarme.Rules.Design.PreferIntegerOrStringForIndexersRule</rule>
    <rule Name="PreferXmlAbstractionsRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.PreferXmlAbstractionsRule(2.10)">Gendarme.Rules.Design.PreferXmlAbstractionsRule</rule>
    <rule Name="ProvideAlternativeNamesForOperatorOverloadsRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.ProvideAlternativeNamesForOperatorOverloadsRule(2.10)">Gendarme.Rules.Design.ProvideAlternativeNamesForOperatorOverloadsRule</rule>
    <rule Name="TypesShouldBeInsideNamespacesRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.TypesShouldBeInsideNamespacesRule(2.10)">Gendarme.Rules.Design.TypesShouldBeInsideNamespacesRule</rule>
    <rule Name="TypesWithDisposableFieldsShouldBeDisposableRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.TypesWithDisposableFieldsShouldBeDisposableRule(2.10)">Gendarme.Rules.Design.TypesWithDisposableFieldsShouldBeDisposableRule</rule>
    <rule Name="TypesWithNativeFieldsShouldBeDisposableRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.TypesWithNativeFieldsShouldBeDisposableRule(2.10)">Gendarme.Rules.Design.TypesWithNativeFieldsShouldBeDisposableRule</rule>
    <rule Name="UseFlagsAttributeRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.UseFlagsAttributeRule(2.10)">Gendarme.Rules.Design.UseFlagsAttributeRule</rule>
    <rule Name="UseCorrectDisposeSignaturesRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.UseCorrectDisposeSignaturesRule(2.10)">Gendarme.Rules.Design.UseCorrectDisposeSignaturesRule</rule>
    <rule Name="ImplementICloneableCorrectlyRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.ImplementICloneableCorrectlyRule(2.10)">Gendarme.Rules.Design.ImplementICloneableCorrectlyRule</rule>
    <rule Name="AvoidArgumentExceptionDefaultConstructorRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Exceptions.AvoidArgumentExceptionDefaultConstructorRule(2.10)">Gendarme.Rules.Exceptions.AvoidArgumentExceptionDefaultConstructorRule</rule>
    <rule Name="AvoidThrowingBasicExceptionsRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Exceptions.AvoidThrowingBasicExceptionsRule(2.10)">Gendarme.Rules.Exceptions.AvoidThrowingBasicExceptionsRule</rule>
    <rule Name="DoNotDestroyStackTraceRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Exceptions.DoNotDestroyStackTraceRule(2.10)">Gendarme.Rules.Exceptions.DoNotDestroyStackTraceRule</rule>
    <rule Name="DoNotThrowInUnexpectedLocationRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Exceptions.DoNotThrowInUnexpectedLocationRule(2.10)">Gendarme.Rules.Exceptions.DoNotThrowInUnexpectedLocationRule</rule>
    <rule Name="DoNotThrowReservedExceptionRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Exceptions.DoNotThrowReservedExceptionRule(2.10)">Gendarme.Rules.Exceptions.DoNotThrowReservedExceptionRule</rule>
    <rule Name="DoNotSwallowErrorsCatchingNonSpecificExceptionsRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Exceptions.DoNotSwallowErrorsCatchingNonSpecificExceptionsRule(2.10)">Gendarme.Rules.Exceptions.DoNotSwallowErrorsCatchingNonSpecificExceptionsRule</rule>
    <rule Name="ExceptionShouldBeVisibleRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Exceptions.ExceptionShouldBeVisibleRule(2.10)">Gendarme.Rules.Exceptions.ExceptionShouldBeVisibleRule</rule>
    <rule Name="InstantiateArgumentExceptionCorrectlyRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Exceptions.InstantiateArgumentExceptionCorrectlyRule(2.10)">Gendarme.Rules.Exceptions.InstantiateArgumentExceptionCorrectlyRule</rule>
    <rule Name="MissingExceptionConstructorsRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Exceptions.MissingExceptionConstructorsRule(2.10)">Gendarme.Rules.Exceptions.MissingExceptionConstructorsRule</rule>
    <rule Name="DelegatesPassedToNativeCodeMustIncludeExceptionHandlingRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Interoperability.DelegatesPassedToNativeCodeMustIncludeExceptionHandlingRule(2.10)">Gendarme.Rules.Interoperability.DelegatesPassedToNativeCodeMustIncludeExceptionHandlingRule</rule>
    <rule Name="DoNotAssumeIntPtrSizeRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Interoperability.DoNotAssumeIntPtrSizeRule(2.10)">Gendarme.Rules.Interoperability.DoNotAssumeIntPtrSizeRule</rule>
    <rule Name="GetLastErrorMustBeCalledRightAfterPInvokeRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Interoperability.GetLastErrorMustBeCalledRightAfterPInvokeRule(2.10)">Gendarme.Rules.Interoperability.GetLastErrorMustBeCalledRightAfterPInvokeRule</rule>
    <rule Name="MarshalBooleansInPInvokeDeclarationsRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Interoperability.MarshalBooleansInPInvokeDeclarationsRule(2.10)">Gendarme.Rules.Interoperability.MarshalBooleansInPInvokeDeclarationsRule</rule>
    <rule Name="MarshalStringsInPInvokeDeclarationsRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Interoperability.MarshalStringsInPInvokeDeclarationsRule(2.10)">Gendarme.Rules.Interoperability.MarshalStringsInPInvokeDeclarationsRule</rule>
    <rule Name="PInvokeShouldNotBeVisibleRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Interoperability.PInvokeShouldNotBeVisibleRule(2.10)">Gendarme.Rules.Interoperability.PInvokeShouldNotBeVisibleRule</rule>
    <rule Name="UseManagedAlternativesToPInvokeRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Interoperability.UseManagedAlternativesToPInvokeRule(2.10)">Gendarme.Rules.Interoperability.UseManagedAlternativesToPInvokeRule</rule>
    <rule Name="AvoidComplexMethodsRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Maintainability.AvoidComplexMethodsRule(2.10)">Gendarme.Rules.Maintainability.AvoidComplexMethodsRule</rule>
    <rule Name="AvoidDeepInheritanceTreeRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Maintainability.AvoidDeepInheritanceTreeRule(2.10)">Gendarme.Rules.Maintainability.AvoidDeepInheritanceTreeRule</rule>
    <rule Name="AvoidUnnecessarySpecializationRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Maintainability.AvoidUnnecessarySpecializationRule(2.10)">Gendarme.Rules.Maintainability.AvoidUnnecessarySpecializationRule</rule>
    <rule Name="ConsiderUsingStopwatchRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Maintainability.ConsiderUsingStopwatchRule(2.10)">Gendarme.Rules.Maintainability.ConsiderUsingStopwatchRule</rule>
    <rule Name="PreferStringIsNullOrEmptyRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Maintainability.PreferStringIsNullOrEmptyRule(2.10)">Gendarme.Rules.Maintainability.PreferStringIsNullOrEmptyRule</rule>
    <rule Name="AvoidRedundancyInMethodNameRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Naming.AvoidRedundancyInMethodNameRule(2.10)">Gendarme.Rules.Naming.AvoidRedundancyInMethodNameRule</rule>
    <rule Name="AvoidRedundancyInTypeNameRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Naming.AvoidRedundancyInTypeNameRule(2.10)">Gendarme.Rules.Naming.AvoidRedundancyInTypeNameRule</rule>
    <rule Name="AvoidNonAlphanumericIdentifierRule" Type="Assembly" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Naming.AvoidNonAlphanumericIdentifierRule(2.10)">Gendarme.Rules.Naming.AvoidNonAlphanumericIdentifierRule</rule>
    <rule Name="DoNotPrefixEventsWithAfterOrBeforeRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Naming.DoNotPrefixEventsWithAfterOrBeforeRule(2.10)">Gendarme.Rules.Naming.DoNotPrefixEventsWithAfterOrBeforeRule</rule>
    <rule Name="DoNotPrefixValuesWithEnumNameRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Naming.DoNotPrefixValuesWithEnumNameRule(2.10)">Gendarme.Rules.Naming.DoNotPrefixValuesWithEnumNameRule</rule>
    <rule Name="DoNotUseReservedInEnumValueNamesRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Naming.DoNotUseReservedInEnumValueNamesRule(2.10)">Gendarme.Rules.Naming.DoNotUseReservedInEnumValueNamesRule</rule>
    <rule Name="ParameterNamesShouldMatchOverriddenMethodRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Naming.ParameterNamesShouldMatchOverriddenMethodRule(2.10)">Gendarme.Rules.Naming.ParameterNamesShouldMatchOverriddenMethodRule</rule>
    <rule Name="UseCorrectCasingRule" Type="Assembly" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Naming.UseCorrectCasingRule(2.10)">Gendarme.Rules.Naming.UseCorrectCasingRule</rule>
    <rule Name="UseCorrectPrefixRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Naming.UseCorrectPrefixRule(2.10)">Gendarme.Rules.Naming.UseCorrectPrefixRule</rule>
    <rule Name="UsePluralNameInEnumFlagsRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Naming.UsePluralNameInEnumFlagsRule(2.10)">Gendarme.Rules.Naming.UsePluralNameInEnumFlagsRule</rule>
    <rule Name="UsePreferredTermsRule" Type="Assembly" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Naming.UsePreferredTermsRule(2.10)">Gendarme.Rules.Naming.UsePreferredTermsRule</rule>
    <rule Name="UseSingularNameInEnumsUnlessAreFlagsRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Naming.UseSingularNameInEnumsUnlessAreFlagsRule(2.10)">Gendarme.Rules.Naming.UseSingularNameInEnumsUnlessAreFlagsRule</rule>
    <rule Name="AvoidLargeNumberOfLocalVariablesRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Performance.AvoidLargeNumberOfLocalVariablesRule(2.10)">Gendarme.Rules.Performance.AvoidLargeNumberOfLocalVariablesRule</rule>
    <rule Name="AvoidLargeStructureRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Performance.AvoidLargeStructureRule(2.10)">Gendarme.Rules.Performance.AvoidLargeStructureRule</rule>
    <rule Name="AvoidReturningArraysOnPropertiesRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Performance.AvoidReturningArraysOnPropertiesRule(2.10)">Gendarme.Rules.Performance.AvoidReturningArraysOnPropertiesRule</rule>
    <rule Name="AvoidTypeGetTypeForConstantStringsRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Performance.AvoidTypeGetTypeForConstantStringsRule(2.10)">Gendarme.Rules.Performance.AvoidTypeGetTypeForConstantStringsRule</rule>
    <rule Name="AvoidUncalledPrivateCodeRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Performance.AvoidUncalledPrivateCodeRule(2.10)">Gendarme.Rules.Performance.AvoidUncalledPrivateCodeRule</rule>
    <rule Name="AvoidUninstantiatedInternalClassesRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Performance.AvoidUninstantiatedInternalClassesRule(2.10)">Gendarme.Rules.Performance.AvoidUninstantiatedInternalClassesRule</rule>
    <rule Name="AvoidUnneededCallsOnStringRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Performance.AvoidUnneededCallsOnStringRule(2.10)">Gendarme.Rules.Performance.AvoidUnneededCallsOnStringRule</rule>
    <rule Name="AvoidUnneededFieldInitializationRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Performance.AvoidUnneededFieldInitializationRule(2.10)">Gendarme.Rules.Performance.AvoidUnneededFieldInitializationRule</rule>
    <rule Name="AvoidUnneededUnboxingRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Performance.AvoidUnneededUnboxingRule(2.10)">Gendarme.Rules.Performance.AvoidUnneededUnboxingRule</rule>
    <rule Name="AvoidUnsealedConcreteAttributesRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Performance.AvoidUnsealedConcreteAttributesRule(2.10)">Gendarme.Rules.Performance.AvoidUnsealedConcreteAttributesRule</rule>
    <rule Name="AvoidUnusedParametersRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Performance.AvoidUnusedParametersRule(2.10)">Gendarme.Rules.Performance.AvoidUnusedParametersRule</rule>
    <rule Name="AvoidUnusedPrivateFieldsRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Performance.AvoidUnusedPrivateFieldsRule(2.10)">Gendarme.Rules.Performance.AvoidUnusedPrivateFieldsRule</rule>
    <rule Name="CompareWithEmptyStringEfficientlyRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Performance.CompareWithEmptyStringEfficientlyRule(2.10)">Gendarme.Rules.Performance.CompareWithEmptyStringEfficientlyRule</rule>
    <rule Name="ConsiderCustomAccessorsForNonVisibleEventsRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Performance.ConsiderCustomAccessorsForNonVisibleEventsRule(2.10)">Gendarme.Rules.Performance.ConsiderCustomAccessorsForNonVisibleEventsRule</rule>
    <rule Name="DoNotIgnoreMethodResultRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Performance.DoNotIgnoreMethodResultRule(2.10)">Gendarme.Rules.Performance.DoNotIgnoreMethodResultRule</rule>
    <rule Name="RemoveUnneededFinalizerRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Performance.RemoveUnneededFinalizerRule(2.10)">Gendarme.Rules.Performance.RemoveUnneededFinalizerRule</rule>
    <rule Name="UseSuppressFinalizeOnIDisposableTypeWithFinalizerRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Performance.UseSuppressFinalizeOnIDisposableTypeWithFinalizerRule(2.10)">Gendarme.Rules.Performance.UseSuppressFinalizeOnIDisposableTypeWithFinalizerRule</rule>
    <rule Name="ImplementEqualsTypeRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Performance.ImplementEqualsTypeRule(2.10)">Gendarme.Rules.Performance.ImplementEqualsTypeRule</rule>
    <rule Name="MathMinMaxCandidateRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Performance.MathMinMaxCandidateRule(2.10)">Gendarme.Rules.Performance.MathMinMaxCandidateRule</rule>
    <rule Name="OverrideValueTypeDefaultsRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Performance.OverrideValueTypeDefaultsRule(2.10)">Gendarme.Rules.Performance.OverrideValueTypeDefaultsRule</rule>
    <rule Name="PreferCharOverloadRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Performance.PreferCharOverloadRule(2.10)">Gendarme.Rules.Performance.PreferCharOverloadRule</rule>
    <rule Name="PreferLiteralOverInitOnlyFieldsRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Performance.PreferLiteralOverInitOnlyFieldsRule(2.10)">Gendarme.Rules.Performance.PreferLiteralOverInitOnlyFieldsRule</rule>
    <rule Name="RemoveUnusedLocalVariablesRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Performance.RemoveUnusedLocalVariablesRule(2.10)">Gendarme.Rules.Performance.RemoveUnusedLocalVariablesRule</rule>
    <rule Name="ReviewLinqMethodRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Performance.ReviewLinqMethodRule(2.10)">Gendarme.Rules.Performance.ReviewLinqMethodRule</rule>
    <rule Name="UseIsOperatorRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Performance.UseIsOperatorRule(2.10)">Gendarme.Rules.Performance.UseIsOperatorRule</rule>
    <rule Name="UseStringEmptyRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Performance.UseStringEmptyRule(2.10)">Gendarme.Rules.Performance.UseStringEmptyRule</rule>
    <rule Name="UseTypeEmptyTypesRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Performance.UseTypeEmptyTypesRule(2.10)">Gendarme.Rules.Performance.UseTypeEmptyTypesRule</rule>
    <rule Name="AddMissingTypeInheritanceDemandRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Security.Cas.AddMissingTypeInheritanceDemandRule(2.10)">Gendarme.Rules.Security.Cas.AddMissingTypeInheritanceDemandRule</rule>
    <rule Name="DoNotExposeFieldsInSecuredTypeRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Security.Cas.DoNotExposeFieldsInSecuredTypeRule(2.10)">Gendarme.Rules.Security.Cas.DoNotExposeFieldsInSecuredTypeRule</rule>
    <rule Name="DoNotExposeMethodsProtectedByLinkDemandRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Security.Cas.DoNotExposeMethodsProtectedByLinkDemandRule(2.10)">Gendarme.Rules.Security.Cas.DoNotExposeMethodsProtectedByLinkDemandRule</rule>
    <rule Name="DoNotReduceTypeSecurityOnMethodsRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Security.Cas.DoNotReduceTypeSecurityOnMethodsRule(2.10)">Gendarme.Rules.Security.Cas.DoNotReduceTypeSecurityOnMethodsRule</rule>
    <rule Name="ReviewSealedTypeWithInheritanceDemandRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Security.Cas.ReviewSealedTypeWithInheritanceDemandRule(2.10)">Gendarme.Rules.Security.Cas.ReviewSealedTypeWithInheritanceDemandRule</rule>
    <rule Name="ReviewSuppressUnmanagedCodeSecurityUsageRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Security.Cas.ReviewSuppressUnmanagedCodeSecurityUsageRule(2.10)">Gendarme.Rules.Security.Cas.ReviewSuppressUnmanagedCodeSecurityUsageRule</rule>
    <rule Name="SecureGetObjectDataOverridesRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Security.Cas.SecureGetObjectDataOverridesRule(2.10)">Gendarme.Rules.Security.Cas.SecureGetObjectDataOverridesRule</rule>
    <rule Name="ArrayFieldsShouldNotBeReadOnlyRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Security.ArrayFieldsShouldNotBeReadOnlyRule(2.10)">Gendarme.Rules.Security.ArrayFieldsShouldNotBeReadOnlyRule</rule>
    <rule Name="DoNotShortCircuitCertificateCheckRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Security.DoNotShortCircuitCertificateCheckRule(2.10)">Gendarme.Rules.Security.DoNotShortCircuitCertificateCheckRule</rule>
    <rule Name="NativeFieldsShouldNotBeVisibleRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Security.NativeFieldsShouldNotBeVisibleRule(2.10)">Gendarme.Rules.Security.NativeFieldsShouldNotBeVisibleRule</rule>
    <rule Name="StaticConstructorsShouldBePrivateRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Security.StaticConstructorsShouldBePrivateRule(2.10)">Gendarme.Rules.Security.StaticConstructorsShouldBePrivateRule</rule>
    <rule Name="CallBaseMethodsOnISerializableTypesRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Serialization.CallBaseMethodsOnISerializableTypesRule(2.10)">Gendarme.Rules.Serialization.CallBaseMethodsOnISerializableTypesRule</rule>
    <rule Name="DeserializeOptionalFieldRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Serialization.DeserializeOptionalFieldRule(2.10)">Gendarme.Rules.Serialization.DeserializeOptionalFieldRule</rule>
    <rule Name="ImplementISerializableCorrectlyRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Serialization.ImplementISerializableCorrectlyRule(2.10)">Gendarme.Rules.Serialization.ImplementISerializableCorrectlyRule</rule>
    <rule Name="MarkAllNonSerializableFieldsRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Serialization.MarkAllNonSerializableFieldsRule(2.10)">Gendarme.Rules.Serialization.MarkAllNonSerializableFieldsRule</rule>
    <rule Name="MarkEnumerationsAsSerializableRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Serialization.MarkEnumerationsAsSerializableRule(2.10)">Gendarme.Rules.Serialization.MarkEnumerationsAsSerializableRule</rule>
    <rule Name="MissingSerializableAttributeOnISerializableTypeRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Serialization.MissingSerializableAttributeOnISerializableTypeRule(2.10)">Gendarme.Rules.Serialization.MissingSerializableAttributeOnISerializableTypeRule</rule>
    <rule Name="MissingSerializationConstructorRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Serialization.MissingSerializationConstructorRule(2.10)">Gendarme.Rules.Serialization.MissingSerializationConstructorRule</rule>
    <rule Name="UseCorrectSignatureForSerializationMethodsRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Serialization.UseCorrectSignatureForSerializationMethodsRule(2.10)">Gendarme.Rules.Serialization.UseCorrectSignatureForSerializationMethodsRule</rule>
    <rule Name="AvoidLongMethodsRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Smells.AvoidLongMethodsRule(2.10)">Gendarme.Rules.Smells.AvoidLongMethodsRule</rule>
    <rule Name="AvoidLongParameterListsRule" Type="Type" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Smells.AvoidLongParameterListsRule(2.10)">Gendarme.Rules.Smells.AvoidLongParameterListsRule</rule>
    <rule Name="AvoidSwitchStatementsRule" Type="Method" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Smells.AvoidSwitchStatementsRule(2.10)">Gendarme.Rules.Smells.AvoidSwitchStatementsRule</rule>
    <rule Name="SystemWindowsFormsExecutableTargetRule" Type="Assembly" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.UI.SystemWindowsFormsExecutableTargetRule(2.10)">Gendarme.Rules.UI.SystemWindowsFormsExecutableTargetRule</rule>
    <rule Name="UseSTAThreadAttributeOnSWFEntryPointsRule" Type="Assembly" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.UI.UseSTAThreadAttributeOnSWFEntryPointsRule(2.10)">Gendarme.Rules.UI.UseSTAThreadAttributeOnSWFEntryPointsRule</rule>
  </rules>
  <results>
    <rule Name="AbstractTypesShouldNotHavePublicConstructorsRule" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.AbstractTypesShouldNotHavePublicConstructorsRule(2.10)">
      <problem>This abstract type defines public constructor(s).</problem>
      <solution>Change the constructor access to protected.</solution>
      <target Name="SmallWorld.Unit" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Total" Location="System.Void SmallWorld.Unit::.ctor()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Unit.cs(≈20)"></defect>
        <defect Severity="Low" Confidence="Total" Location="System.Void SmallWorld.Unit::.ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Unit.cs(≈20)"></defect>
      </target>
      <target Name="SmallWorld.Nation" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Total" Location="System.Void SmallWorld.Nation::.ctor()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Nation.cs(≈23)"></defect>
        <defect Severity="Low" Confidence="Total" Location="System.Void SmallWorld.Nation::.ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Nation.cs(≈26)"></defect>
      </target>
    </rule>
    <rule Name="AvoidConstructorsInStaticTypesRule" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Correctness.AvoidConstructorsInStaticTypesRule(2.10)">
      <problem>This type (and ancestors) contains only static fields and methods but has a visible, non static, constructor.</problem>
      <solution>You should remove the visible constructor to make sure this type cannot be instantiated, or if using 2.0+, change it to a static type.</solution>
      <target Name="SmallWorld.Case" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="High" Location="System.Void SmallWorld.Case::.ctor()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Map\Case.cs(≈14)"></defect>
      </target>
      <target Name="SmallWorld.Desert" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="High" Location="System.Void SmallWorld.Desert::.ctor()" Source=""></defect>
      </target>
      <target Name="SmallWorld.Forest" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="High" Location="System.Void SmallWorld.Forest::.ctor()" Source=""></defect>
      </target>
      <target Name="SmallWorld.Mountain" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="High" Location="System.Void SmallWorld.Mountain::.ctor()" Source=""></defect>
      </target>
      <target Name="SmallWorld.Plain" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="High" Location="System.Void SmallWorld.Plain::.ctor()" Source=""></defect>
      </target>
      <target Name="SmallWorld.Sea" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="High" Location="System.Void SmallWorld.Sea::.ctor()" Source=""></defect>
      </target>
    </rule>
    <rule Name="AvoidNonAlphanumericIdentifierRule" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Naming.AvoidNonAlphanumericIdentifierRule(2.10)">
      <problem>This namespace, type or member name contains underscore(s).</problem>
      <solution>Remove the underscore from the specified name.</solution>
      <target Name="System.Int32 SmallWorld.GameCreation::get_NB_ROUNDS()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.GameCreation::get_NB_ROUNDS()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\GameCreation.cs(≈25)"></defect>
      </target>
      <target Name="System.Int32 SmallWorld.GameCreation::get_MAP_SIZE()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.GameCreation::get_MAP_SIZE()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\GameCreation.cs(≈25)"></defect>
      </target>
      <target Name="System.Int32 SmallWorld.GameCreation::get_NB_UNITS()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.GameCreation::get_NB_UNITS()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\GameCreation.cs(≈25)"></defect>
      </target>
      <target Name="System.Int32 SmallWorld.IDemoGameBuilder::get_NB_ROUNDS()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.IDemoGameBuilder::get_NB_ROUNDS()" Source=""></defect>
      </target>
      <target Name="System.Int32 SmallWorld.IDemoGameBuilder::get_MAP_SIZE()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.IDemoGameBuilder::get_MAP_SIZE()" Source=""></defect>
      </target>
      <target Name="System.Int32 SmallWorld.IDemoGameBuilder::get_NB_UNITS()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.IDemoGameBuilder::get_NB_UNITS()" Source=""></defect>
      </target>
      <target Name="System.Int32 SmallWorld.DemoGameBuilder::get_NB_ROUNDS()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.DemoGameBuilder::get_NB_ROUNDS()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\DemoGameBuilder.cs(≈19)"></defect>
      </target>
      <target Name="System.Int32 SmallWorld.DemoGameBuilder::get_MAP_SIZE()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.DemoGameBuilder::get_MAP_SIZE()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\DemoGameBuilder.cs(≈27)"></defect>
      </target>
      <target Name="System.Int32 SmallWorld.DemoGameBuilder::get_NB_UNITS()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.DemoGameBuilder::get_NB_UNITS()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\DemoGameBuilder.cs(≈35)"></defect>
      </target>
      <target Name="System.Int32 SmallWorld.INormalGameBuilder::get_NB_ROUNDS()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.INormalGameBuilder::get_NB_ROUNDS()" Source=""></defect>
      </target>
      <target Name="System.Int32 SmallWorld.INormalGameBuilder::get_MAP_SIZE()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.INormalGameBuilder::get_MAP_SIZE()" Source=""></defect>
      </target>
      <target Name="System.Int32 SmallWorld.INormalGameBuilder::get_NB_UNITS()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.INormalGameBuilder::get_NB_UNITS()" Source=""></defect>
      </target>
      <target Name="System.Int32 SmallWorld.ISmallGameBuiler::get_NB_ROUNDS()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.ISmallGameBuiler::get_NB_ROUNDS()" Source=""></defect>
      </target>
      <target Name="System.Int32 SmallWorld.ISmallGameBuiler::get_MAP_SIZE()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.ISmallGameBuiler::get_MAP_SIZE()" Source=""></defect>
      </target>
      <target Name="System.Int32 SmallWorld.ISmallGameBuiler::get_NB_UNITS()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.ISmallGameBuiler::get_NB_UNITS()" Source=""></defect>
      </target>
      <target Name="System.Int32 SmallWorld.NormalGameBuilder::get_NB_ROUNDS()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.NormalGameBuilder::get_NB_ROUNDS()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\NormalGameBuilder.cs(≈17)"></defect>
      </target>
      <target Name="System.Int32 SmallWorld.NormalGameBuilder::get_MAP_SIZE()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.NormalGameBuilder::get_MAP_SIZE()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\NormalGameBuilder.cs(≈25)"></defect>
      </target>
      <target Name="System.Int32 SmallWorld.NormalGameBuilder::get_NB_UNITS()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.NormalGameBuilder::get_NB_UNITS()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\NormalGameBuilder.cs(≈33)"></defect>
      </target>
      <target Name="System.Int32 SmallWorld.SmallGameBuilder::get_NB_ROUNDS()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.SmallGameBuilder::get_NB_ROUNDS()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\SmallGameBuilder.cs(≈17)"></defect>
      </target>
      <target Name="System.Int32 SmallWorld.SmallGameBuilder::get_MAP_SIZE()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.SmallGameBuilder::get_MAP_SIZE()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\SmallGameBuilder.cs(≈25)"></defect>
      </target>
      <target Name="System.Int32 SmallWorld.SmallGameBuilder::get_NB_UNITS()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.SmallGameBuilder::get_NB_UNITS()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\SmallGameBuilder.cs(≈33)"></defect>
      </target>
    </rule>
    <rule Name="AvoidReturningArraysOnPropertiesRule" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Performance.AvoidReturningArraysOnPropertiesRule(2.10)">
      <problem>By convention properties should not return arrays.</problem>
      <solution>Return a read-only collection or replace the property by a method and return a copy of the array.</solution>
      <target Name="SmallWorld.IPlayer[] SmallWorld.Game::get_Players()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="Total" Location="SmallWorld.IPlayer[] SmallWorld.Game::get_Players()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Game.cs(≈40)"></defect>
      </target>
    </rule>
    <rule Name="AvoidSwitchStatementsRule" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Smells.AvoidSwitchStatementsRule(2.10)">
      <problem>The problem with switch statements is the duplication.  You may find the same switch in several places.</problem>
      <solution>You should consider polymorphism.</solution>
      <target Name="System.Void SmallWorld.Player::.ctor(System.String,SmallWorld.NationType,System.Int32)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Total" Location="System.Void SmallWorld.Player::.ctor(System.String,SmallWorld.NationType,System.Int32)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Player.cs(45,13)"></defect>
      </target>
    </rule>
    <rule Name="AvoidThrowingBasicExceptionsRule" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Exceptions.AvoidThrowingBasicExceptionsRule(2.10)">
      <problem>This method creates (and probably throws) an exception of Exception, ApplicationException or SystemException type.</problem>
      <solution>Try to use a more specific exception type. If none of existing types meet your needs, create a custom exception class that inherits from System.Exception or any appropriate descendant of it.</solution>
      <target Name="System.Void SmallWorld.Game::set_CurrentRound(System.Int32)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Void SmallWorld.Game::set_CurrentRound(System.Int32)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Game.cs(≈52)">System.Exception</defect>
      </target>
    </rule>
    <rule Name="AvoidUnusedParametersRule" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Performance.AvoidUnusedParametersRule(2.10)">
      <problem>The method contains one or more unused parameters.</problem>
      <solution>You should remove or use the unused parameters.</solution>
      <target Name="System.Void SmallWorld.Unit::.ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="Normal" Location="ctxt" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Unit.cs(≈20)">Parameter 'ctxt' of type 'System.Runtime.Serialization.StreamingContext' is never used in the method.</defect>
      </target>
      <target Name="System.Void SmallWorld.Game::.ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="Normal" Location="ctxt" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Game.cs(≈254)">Parameter 'ctxt' of type 'System.Runtime.Serialization.StreamingContext' is never used in the method.</defect>
      </target>
      <target Name="System.Void SmallWorld.Map::.ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="Normal" Location="ctxt" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Map\Map.cs(≈318)">Parameter 'ctxt' of type 'System.Runtime.Serialization.StreamingContext' is never used in the method.</defect>
      </target>
      <target Name="System.Void SmallWorld.Nation::.ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="Normal" Location="info" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Nation.cs(≈26)">Parameter 'info' of type 'System.Runtime.Serialization.SerializationInfo' is never used in the method.</defect>
        <defect Severity="Medium" Confidence="Normal" Location="ctxt" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Nation.cs(≈26)">Parameter 'ctxt' of type 'System.Runtime.Serialization.StreamingContext' is never used in the method.</defect>
      </target>
      <target Name="System.Void SmallWorld.Player::.ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="Normal" Location="ctxt" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Player.cs(≈113)">Parameter 'ctxt' of type 'System.Runtime.Serialization.StreamingContext' is never used in the method.</defect>
      </target>
    </rule>
    <rule Name="AvoidVisibleFieldsRule" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.AvoidVisibleFieldsRule(2.10)">
      <problem>This type contains visible instance fields. A field should be an implementation detail and encapsulated within a property or method.</problem>
      <solution>Use a property or method instead.</solution>
      <target Name="SmallWorld.Case" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="Total" Location="System.Int32 SmallWorld.Case::SIZE" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Map\Case.cs(≈14)">Field 'SIZE' should be private or internal and its value accessed through a property.</defect>
      </target>
    </rule>
    <rule Name="ConsiderConvertingMethodToPropertyRule" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.ConsiderConvertingMethodToPropertyRule(2.10)">
      <problem>This method looks like a candidate to be a property.</problem>
      <solution>Either make the method a property or ignore the defect.</solution>
      <target Name="System.Boolean SmallWorld.IUnit::isAlive()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Normal" Location="System.Boolean SmallWorld.IUnit::isAlive()" Source=""></defect>
      </target>
      <target Name="System.Collections.Generic.List`1&lt;System.Tuple`2&lt;System.Drawing.Point,SmallWorld.MoveType&gt;&gt; SmallWorld.IUnit::getSuggestedPoints()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Normal" Location="System.Collections.Generic.List`1&lt;System.Tuple`2&lt;System.Drawing.Point,SmallWorld.MoveType&gt;&gt; SmallWorld.IUnit::getSuggestedPoints()" Source=""></defect>
      </target>
      <target Name="System.Boolean SmallWorld.Unit::isAlive()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Normal" Location="System.Boolean SmallWorld.Unit::isAlive()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Unit.cs(≈178)"></defect>
      </target>
      <target Name="System.Int32 SmallWorld.Unit::getPoints()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Normal" Location="System.Int32 SmallWorld.Unit::getPoints()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Unit.cs(≈188)"></defect>
      </target>
      <target Name="System.Collections.Generic.List`1&lt;System.Tuple`2&lt;System.Drawing.Point,SmallWorld.MoveType&gt;&gt; SmallWorld.Unit::getSuggestedPoints()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Normal" Location="System.Collections.Generic.List`1&lt;System.Tuple`2&lt;System.Drawing.Point,SmallWorld.MoveType&gt;&gt; SmallWorld.Unit::getSuggestedPoints()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Unit.cs(≈261)"></defect>
      </target>
      <target Name="System.Boolean SmallWorld.IGame::isFinished()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Normal" Location="System.Boolean SmallWorld.IGame::isFinished()" Source=""></defect>
      </target>
      <target Name="System.Boolean SmallWorld.Game::isFinished()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Normal" Location="System.Boolean SmallWorld.Game::isFinished()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Game.cs(≈213)"></defect>
      </target>
      <target Name="System.Int32 SmallWorld.IPlayer::getNbUnitsToPlay()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Normal" Location="System.Int32 SmallWorld.IPlayer::getNbUnitsToPlay()" Source=""></defect>
      </target>
      <target Name="System.Int32 SmallWorld.Player::getNbUnitsToPlay()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Normal" Location="System.Int32 SmallWorld.Player::getNbUnitsToPlay()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Player.cs(≈83)"></defect>
      </target>
      <target Name="System.Boolean SmallWorld.Viking::isNearWater()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Normal" Location="System.Boolean SmallWorld.Viking::isNearWater()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Viking.cs(≈45)"></defect>
      </target>
    </rule>
    <rule Name="ConsiderUsingStaticTypeRule" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.ConsiderUsingStaticTypeRule(2.10)">
      <problem>This type contains only static fields and methods and should be static.</problem>
      <solution>Change this type into a static type to gain clarity and better error reporting.</solution>
      <target Name="SmallWorld.Case" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="SmallWorld.Case" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Map\Case.cs(≈14)"></defect>
      </target>
    </rule>
    <rule Name="DoNotExposeNestedGenericSignaturesRule" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.Generic.DoNotExposeNestedGenericSignaturesRule(2.10)">
      <problem>This method exposes a nested generic type in its signature.</problem>
      <solution>Remove the nested generics to keep the visible API simple to use.</solution>
      <target Name="System.Collections.Generic.List`1&lt;System.Tuple`2&lt;System.Drawing.Point,SmallWorld.MoveType&gt;&gt; SmallWorld.IUnit::getSuggestedPoints()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="High" Confidence="Total" Location="Mono.Cecil.MethodReturnType" Source=""></defect>
      </target>
      <target Name="System.Collections.Generic.List`1&lt;System.Tuple`2&lt;System.Drawing.Point,SmallWorld.MoveType&gt;&gt; SmallWorld.Unit::getSuggestedPoints()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="High" Confidence="Total" Location="Mono.Cecil.MethodReturnType" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Unit.cs(≈261)"></defect>
      </target>
    </rule>
    <rule Name="DoNotThrowReservedExceptionRule" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Exceptions.DoNotThrowReservedExceptionRule(2.10)">
      <problem>This method creates an ExecutionEngineException, IndexOutOfRangeException, NullReferenceException, or OutOfMemoryException.</problem>
      <solution>Throw an exception which is not reserved by the runtime.</solution>
      <target Name="System.Int32 SmallWorld.Map::getIndexFromPoint(System.Drawing.Point)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="High" Confidence="High" Location="System.Int32 SmallWorld.Map::getIndexFromPoint(System.Drawing.Point)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Map\Map.cs(≈193)">System.IndexOutOfRangeException</defect>
      </target>
    </rule>
    <rule Name="EnsureLocalDisposalRule" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Correctness.EnsureLocalDisposalRule(2.10)">
      <problem>This disposable local is not guaranteed to be disposed of before the method returns.</problem>
      <solution>Use a 'using' statement or surround the local's usage with a try/finally block.</solution>
      <target Name="System.Void SmallWorld.Game::saveCurrentGame(System.String)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="High" Confidence="Normal" Location="System.Void SmallWorld.Game::saveCurrentGame(System.String)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Game.cs(≈275)">Local 'stream' of type 'Stream' is not disposed of (at least not locally).</defect>
      </target>
      <target Name="System.Void SmallWorld.Game::restoreGame(System.String)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="High" Confidence="Normal" Location="System.Void SmallWorld.Game::restoreGame(System.String)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Game.cs(≈290)">Local 'stream' of type 'Stream' is not disposed of (at least not locally).</defect>
      </target>
    </rule>
    <rule Name="ExceptionShouldBeVisibleRule" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Exceptions.ExceptionShouldBeVisibleRule(2.10)">
      <problem>This exception is not public and its base class does not provide enough information to be useful.</problem>
      <solution>Change the exception's visibility to public, inherit from another exception, or ignore the defect.</solution>
      <target Name="SmallWorld.UnknownTileException" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="High" Confidence="Total" Location="SmallWorld.UnknownTileException" Source=""></defect>
      </target>
    </rule>
    <rule Name="ImplementISerializableCorrectlyRule" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Serialization.ImplementISerializableCorrectlyRule(2.10)">
      <problem>Although you are implementing the ISerializable interface, there are some fields that aren't going to be serialized and aren't marked with the [NonSerialized] attribute.</problem>
      <solution>Either add the [NonSerialized] attribute to the field or serialize it. This will help developers better understand your code and make errors easier to find.</solution>
      <target Name="SmallWorld.Unit" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="Normal" Location="System.Int32 SmallWorld.Unit::_attackPoints" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Unit.cs(≈32)"></defect>
        <defect Severity="Medium" Confidence="Normal" Location="System.Int32 SmallWorld.Unit::_defensePoints" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Unit.cs(≈32)"></defect>
        <defect Severity="High" Confidence="Total" Location="System.Void SmallWorld.Unit::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Unit.cs(≈282)">Either seal this type or change GetObjectData method to be virtual</defect>
      </target>
      <target Name="SmallWorld.Game" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="Normal" Location="System.Int32 SmallWorld.Game::_nbUnits" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Game.cs(≈40)"></defect>
        <defect Severity="High" Confidence="Total" Location="System.Void SmallWorld.Game::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Game.cs(≈244)">Either seal this type or change GetObjectData method to be virtual</defect>
      </target>
      <target Name="SmallWorld.Map" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="Normal" Location="SmallWorld.ICase[] SmallWorld.Map::_grid" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Map\Map.cs(≈55)"></defect>
        <defect Severity="Medium" Confidence="Normal" Location="mapWrapper.WrapperMapSuggestion SmallWorld.Map::_suggestEngine" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Map\Map.cs(≈55)"></defect>
        <defect Severity="High" Confidence="Total" Location="System.Void SmallWorld.Map::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Map\Map.cs(≈267)">Either seal this type or change GetObjectData method to be virtual</defect>
      </target>
      <target Name="SmallWorld.Nation" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="High" Confidence="Total" Location="System.Void SmallWorld.Nation::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Nation.cs(≈20)">Either seal this type or change GetObjectData method to be virtual</defect>
      </target>
      <target Name="SmallWorld.Player" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="High" Confidence="Total" Location="System.Void SmallWorld.Player::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Player.cs(≈106)">Either seal this type or change GetObjectData method to be virtual</defect>
      </target>
    </rule>
    <rule Name="MarkAssemblyWithCLSCompliantRule" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Design.MarkAssemblyWithCLSCompliantRule(2.10)">
      <problem>This assembly is not decorated with the [CLSCompliant] attribute.</problem>
      <solution>Add this attribute to ease the use (or non-use) of your assembly by CLS consumers.</solution>
      <target Name="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="High" Confidence="Total" Location="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" Source=""></defect>
      </target>
    </rule>
    <rule Name="MarkEnumerationsAsSerializableRule" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Serialization.MarkEnumerationsAsSerializableRule(2.10)">
      <problem>An enumeration, even if not decorated with [Serializable], is always serializable.</problem>
      <solution>For better source code readability always decorate enumerations with [Serializable].</solution>
      <target Name="SmallWorld.GameSize" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Total" Location="SmallWorld.GameSize" Source=""></defect>
      </target>
      <target Name="SmallWorld.NationType" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Total" Location="SmallWorld.NationType" Source=""></defect>
      </target>
      <target Name="SmallWorld.UnitType" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Total" Location="SmallWorld.UnitType" Source=""></defect>
      </target>
      <target Name="SmallWorld.MoveType" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Total" Location="SmallWorld.MoveType" Source=""></defect>
      </target>
    </rule>
    <rule Name="MethodCanBeMadeStaticRule" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Correctness.MethodCanBeMadeStaticRule(2.10)">
      <problem>This method does not use any instance fields, properties or methods and can be made static.</problem>
      <solution>Make the method static.</solution>
      <target Name="System.Void SmallWorld.Game::saveCurrentGame(System.String)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Total" Location="System.Void SmallWorld.Game::saveCurrentGame(System.String)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Game.cs(≈273)"></defect>
      </target>
      <target Name="System.Void SmallWorld.Game::restoreGame(System.String)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Total" Location="System.Void SmallWorld.Game::restoreGame(System.String)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Game.cs(≈288)"></defect>
      </target>
      <target Name="SmallWorld.ICase SmallWorld.Map::getCaseTypeInstance(System.Int32)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Total" Location="SmallWorld.ICase SmallWorld.Map::getCaseTypeInstance(System.Int32)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Map\Map.cs(≈119)"></defect>
      </target>
    </rule>
    <rule Name="MissingExceptionConstructorsRule" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Exceptions.MissingExceptionConstructorsRule(2.10)">
      <problem>The exception does not provide all of the constructors required by the runtime or by .NET programming conventions.</problem>
      <solution>Add the missing constructor(s).</solution>
      <target Name="SmallWorld.InvalidSaveFileException" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="High" Confidence="Total" Location="SmallWorld.InvalidSaveFileException" Source="">Exception is missing 'public InvalidSaveFileException(string message)' constructor.</defect>
        <defect Severity="High" Confidence="Total" Location="SmallWorld.InvalidSaveFileException" Source="">Exception is missing 'public InvalidSaveFileException(string message, Exception innerException)' constructor.</defect>
        <defect Severity="High" Confidence="Total" Location="SmallWorld.InvalidSaveFileException" Source="">Exception is missing 'protected InvalidSaveFileException(SerializationInfo info, StreamingContext context)' constructor.</defect>
      </target>
      <target Name="SmallWorld.IllegalPlayerException" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="High" Confidence="Total" Location="SmallWorld.IllegalPlayerException" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Game.cs(≈321)">Exception is missing 'public IllegalPlayerException()' constructor.</defect>
        <defect Severity="High" Confidence="Total" Location="SmallWorld.IllegalPlayerException" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Game.cs(≈321)">Exception is missing 'public IllegalPlayerException(string message, Exception innerException)' constructor.</defect>
        <defect Severity="High" Confidence="Total" Location="SmallWorld.IllegalPlayerException" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Game.cs(≈321)">Exception is missing 'protected IllegalPlayerException(SerializationInfo info, StreamingContext context)' constructor.</defect>
      </target>
      <target Name="SmallWorld.UnknownTileException" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="High" Confidence="Total" Location="SmallWorld.UnknownTileException" Source="">Exception is missing 'public UnknownTileException(string message)' constructor.</defect>
        <defect Severity="High" Confidence="Total" Location="SmallWorld.UnknownTileException" Source="">Exception is missing 'public UnknownTileException(string message, Exception innerException)' constructor.</defect>
        <defect Severity="High" Confidence="Total" Location="SmallWorld.UnknownTileException" Source="">Exception is missing 'protected UnknownTileException(SerializationInfo info, StreamingContext context)' constructor.</defect>
      </target>
    </rule>
    <rule Name="MissingSerializableAttributeOnISerializableTypeRule" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Serialization.MissingSerializableAttributeOnISerializableTypeRule(2.10)">
      <problem>The runtime won't consider this type as serializable unless you add the [Serializable] attribute to its definition.</problem>
      <solution>Add [Serializable] to the type definition.</solution>
      <target Name="SmallWorld.InvalidSaveFileException" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Critical" Confidence="Total" Location="SmallWorld.InvalidSaveFileException" Source=""></defect>
      </target>
      <target Name="SmallWorld.IllegalPlayerException" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Critical" Confidence="Total" Location="SmallWorld.IllegalPlayerException" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Game.cs(≈321)"></defect>
      </target>
      <target Name="SmallWorld.UnknownTileException" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Critical" Confidence="Total" Location="SmallWorld.UnknownTileException" Source=""></defect>
      </target>
    </rule>
    <rule Name="MissingSerializationConstructorRule" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Serialization.MissingSerializationConstructorRule(2.10)">
      <problem>The required constructor for ISerializable is not present in this type.</problem>
      <solution>Add a (private for sealed, protected otherwise) serialization constructor for this type.</solution>
      <target Name="SmallWorld.Unit" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Total" Location="SmallWorld.Unit" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Unit.cs(≈32)">The serialization constructor should be protected (family) since this type is not sealed.</defect>
      </target>
      <target Name="SmallWorld.Dwarf" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Total" Location="SmallWorld.Dwarf" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Dwarf.cs(≈13)">The serialization constructor should be protected (family) since this type is not sealed.</defect>
      </target>
      <target Name="SmallWorld.Gallic" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Total" Location="SmallWorld.Gallic" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Gallic.cs(≈12)">The serialization constructor should be protected (family) since this type is not sealed.</defect>
      </target>
      <target Name="SmallWorld.Game" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Total" Location="SmallWorld.Game" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Game.cs(≈40)">The serialization constructor should be protected (family) since this type is not sealed.</defect>
      </target>
      <target Name="SmallWorld.InvalidSaveFileException" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="High" Confidence="Total" Location="SmallWorld.InvalidSaveFileException" Source="">The required constructor for ISerializable is not present in this type.</defect>
      </target>
      <target Name="SmallWorld.IllegalPlayerException" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="High" Confidence="Total" Location="SmallWorld.IllegalPlayerException" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Game.cs(≈321)">The required constructor for ISerializable is not present in this type.</defect>
      </target>
      <target Name="SmallWorld.Map" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Total" Location="SmallWorld.Map" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Map\Map.cs(≈55)">The serialization constructor should be protected (family) since this type is not sealed.</defect>
      </target>
      <target Name="SmallWorld.UnknownTileException" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="High" Confidence="Total" Location="SmallWorld.UnknownTileException" Source="">The required constructor for ISerializable is not present in this type.</defect>
      </target>
      <target Name="SmallWorld.Nation" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Total" Location="SmallWorld.Nation" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Nation.cs(≈20)">The serialization constructor should be protected (family) since this type is not sealed.</defect>
      </target>
      <target Name="SmallWorld.NationDwarf" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Total" Location="SmallWorld.NationDwarf" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\NationDwarf.cs(≈14)">The serialization constructor should be protected (family) since this type is not sealed.</defect>
      </target>
      <target Name="SmallWorld.NationGallic" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Total" Location="SmallWorld.NationGallic" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\NationGallic.cs(≈14)">The serialization constructor should be protected (family) since this type is not sealed.</defect>
      </target>
      <target Name="SmallWorld.NationViking" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Total" Location="SmallWorld.NationViking" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\NationViking.cs(≈14)">The serialization constructor should be protected (family) since this type is not sealed.</defect>
      </target>
      <target Name="SmallWorld.Player" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Total" Location="SmallWorld.Player" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Player.cs(≈19)">The serialization constructor should be protected (family) since this type is not sealed.</defect>
      </target>
      <target Name="SmallWorld.Viking" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Low" Confidence="Total" Location="SmallWorld.Viking" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Viking.cs(≈12)">The serialization constructor should be protected (family) since this type is not sealed.</defect>
      </target>
    </rule>
    <rule Name="NonConstantStaticFieldsShouldNotBeVisibleRule" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Concurrency.NonConstantStaticFieldsShouldNotBeVisibleRule(2.10)">
      <problem>This type has some static fields that are not constant. They may represent problems in multithreaded applications.</problem>
      <solution>Change the field to read-only, or mark it [ThreadStatic], or make it non visible outside the assembly.</solution>
      <target Name="SmallWorld.Case" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.Case::SIZE" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Map\Case.cs(≈14)"></defect>
      </target>
    </rule>
    <rule Name="ParameterNamesShouldMatchOverriddenMethodRule" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Naming.ParameterNamesShouldMatchOverriddenMethodRule(2.10)">
      <problem>This method overrides (or implements) an existing method but does not use the same parameter names as the original.</problem>
      <solution>Keep parameter names consistent when overriding a class or implementing an interface.</solution>
      <target Name="System.Boolean SmallWorld.Unit::canMoveOn(System.Drawing.Point)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Boolean SmallWorld.Unit::canMoveOn(System.Drawing.Point)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Unit.cs(≈242)">The name of parameter #1 (tgt) does not match the name of the parameter in the overriden method (target).</defect>
      </target>
      <target Name="System.Void SmallWorld.Game::initPlayer(System.Int32,System.String,SmallWorld.NationType)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Void SmallWorld.Game::initPlayer(System.Int32,System.String,SmallWorld.NationType)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Game.cs(≈124)">The name of parameter #1 (index) does not match the name of the parameter in the overriden method (i).</defect>
      </target>
      <target Name="SmallWorld.IUnit SmallWorld.Map::getBestDefensiveUnit(System.Drawing.Point)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="SmallWorld.IUnit SmallWorld.Map::getBestDefensiveUnit(System.Drawing.Point)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Map\Map.cs(≈250)">The name of parameter #1 (tgt) does not match the name of the parameter in the overriden method (pos).</defect>
      </target>
    </rule>
    <rule Name="SecureGetObjectDataOverridesRule" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Security.Cas.SecureGetObjectDataOverridesRule(2.10)">
      <problem>The method is not protected correctly against a serialization attack.</problem>
      <solution>A security Demand for SerializationFormatter should be added to protect the method.</solution>
      <target Name="SmallWorld.Unit" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="High" Confidence="Total" Location="System.Void SmallWorld.Unit::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Unit.cs(≈282)">No [Link]Demand was found.</defect>
      </target>
      <target Name="SmallWorld.Game" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="High" Confidence="Total" Location="System.Void SmallWorld.Game::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Game.cs(≈244)">No [Link]Demand was found.</defect>
      </target>
      <target Name="SmallWorld.Map" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="High" Confidence="Total" Location="System.Void SmallWorld.Map::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Map\Map.cs(≈267)">No [Link]Demand was found.</defect>
      </target>
      <target Name="SmallWorld.Nation" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="High" Confidence="Total" Location="System.Void SmallWorld.Nation::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Nation.cs(≈20)">No [Link]Demand was found.</defect>
      </target>
      <target Name="SmallWorld.Player" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="High" Confidence="Total" Location="System.Void SmallWorld.Player::GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Player.cs(≈106)">No [Link]Demand was found.</defect>
      </target>
    </rule>
    <rule Name="UseCorrectCasingRule" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Naming.UseCorrectCasingRule(2.10)">
      <problem>This identifier (namespace, type, or method) violates the .NET naming conventions.</problem>
      <solution>Change the namespace, type, or method name to be pascal-cased (like MyClass) and parameter names to be camel-cased (like myParameter).</solution>
      <target Name="SmallWorld.Game SmallWorld.IGameCreation::createGame(System.String,SmallWorld.NationType,System.String,SmallWorld.NationType)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="SmallWorld.Game SmallWorld.IGameCreation::createGame(System.String,SmallWorld.NationType,System.String,SmallWorld.NationType)" Source="">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'createGame' to 'CreateGame'.</defect>
      </target>
      <target Name="SmallWorld.Game SmallWorld.GameCreation::createGame(System.String,SmallWorld.NationType,System.String,SmallWorld.NationType)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="SmallWorld.Game SmallWorld.GameCreation::createGame(System.String,SmallWorld.NationType,System.String,SmallWorld.NationType)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\GameCreation.cs(≈25)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'createGame' to 'CreateGame'.</defect>
      </target>
      <target Name="System.Boolean SmallWorld.IUnit::attack(SmallWorld.IUnit,System.Drawing.Point)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Boolean SmallWorld.IUnit::attack(SmallWorld.IUnit,System.Drawing.Point)" Source="">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'attack' to 'Attack'.</defect>
      </target>
      <target Name="System.Double SmallWorld.IUnit::computePercentageToWin(SmallWorld.IUnit)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Double SmallWorld.IUnit::computePercentageToWin(SmallWorld.IUnit)" Source="">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'computePercentageToWin' to 'ComputePercentageToWin'.</defect>
      </target>
      <target Name="System.Boolean SmallWorld.IUnit::isAlive()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Boolean SmallWorld.IUnit::isAlive()" Source="">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'isAlive' to 'IsAlive'.</defect>
      </target>
      <target Name="System.Boolean SmallWorld.IUnit::move(System.Drawing.Point)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Boolean SmallWorld.IUnit::move(System.Drawing.Point)" Source="">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'move' to 'Move'.</defect>
      </target>
      <target Name="System.Boolean SmallWorld.IUnit::canMoveOn(System.Drawing.Point)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Boolean SmallWorld.IUnit::canMoveOn(System.Drawing.Point)" Source="">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'canMoveOn' to 'CanMoveOn'.</defect>
      </target>
      <target Name="System.Collections.Generic.List`1&lt;System.Tuple`2&lt;System.Drawing.Point,SmallWorld.MoveType&gt;&gt; SmallWorld.IUnit::getSuggestedPoints()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Collections.Generic.List`1&lt;System.Tuple`2&lt;System.Drawing.Point,SmallWorld.MoveType&gt;&gt; SmallWorld.IUnit::getSuggestedPoints()" Source="">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'getSuggestedPoints' to 'GetSuggestedPoints'.</defect>
      </target>
      <target Name="System.Boolean SmallWorld.Unit::attack(SmallWorld.IUnit,System.Drawing.Point)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Boolean SmallWorld.Unit::attack(SmallWorld.IUnit,System.Drawing.Point)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Unit.cs(≈101)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'attack' to 'Attack'.</defect>
      </target>
      <target Name="System.Double SmallWorld.Unit::computePercentageToWin(SmallWorld.IUnit)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Double SmallWorld.Unit::computePercentageToWin(SmallWorld.IUnit)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Unit.cs(≈155)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'computePercentageToWin' to 'ComputePercentageToWin'.</defect>
      </target>
      <target Name="System.Boolean SmallWorld.Unit::isAlive()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Boolean SmallWorld.Unit::isAlive()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Unit.cs(≈178)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'isAlive' to 'IsAlive'.</defect>
      </target>
      <target Name="System.Int32 SmallWorld.Unit::getPoints()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.Unit::getPoints()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Unit.cs(≈188)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'getPoints' to 'GetPoints'.</defect>
      </target>
      <target Name="System.Boolean SmallWorld.Unit::move(System.Drawing.Point)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Boolean SmallWorld.Unit::move(System.Drawing.Point)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Unit.cs(≈198)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'move' to 'Move'.</defect>
      </target>
      <target Name="System.Boolean SmallWorld.Unit::isNear(System.Drawing.Point)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Boolean SmallWorld.Unit::isNear(System.Drawing.Point)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Unit.cs(≈225)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'isNear' to 'IsNear'.</defect>
      </target>
      <target Name="System.Boolean SmallWorld.Unit::canMoveOn(System.Drawing.Point)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Boolean SmallWorld.Unit::canMoveOn(System.Drawing.Point)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Unit.cs(≈242)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'canMoveOn' to 'CanMoveOn'.</defect>
      </target>
      <target Name="System.Collections.Generic.List`1&lt;System.Tuple`2&lt;System.Drawing.Point,SmallWorld.MoveType&gt;&gt; SmallWorld.Unit::getSuggestedPoints()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Collections.Generic.List`1&lt;System.Tuple`2&lt;System.Drawing.Point,SmallWorld.MoveType&gt;&gt; SmallWorld.Unit::getSuggestedPoints()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Unit.cs(≈261)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'getSuggestedPoints' to 'GetSuggestedPoints'.</defect>
      </target>
      <target Name="System.Boolean SmallWorld.Dwarf::canMoveOn(System.Drawing.Point)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Boolean SmallWorld.Dwarf::canMoveOn(System.Drawing.Point)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Dwarf.cs(≈36)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'canMoveOn' to 'CanMoveOn'.</defect>
      </target>
      <target Name="System.Int32 SmallWorld.Dwarf::getPoints()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.Dwarf::getPoints()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Dwarf.cs(≈56)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'getPoints' to 'GetPoints'.</defect>
      </target>
      <target Name="System.Boolean SmallWorld.Gallic::move(System.Drawing.Point)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Boolean SmallWorld.Gallic::move(System.Drawing.Point)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Gallic.cs(≈29)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'move' to 'Move'.</defect>
      </target>
      <target Name="System.Int32 SmallWorld.Gallic::getPoints()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.Gallic::getPoints()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Gallic.cs(≈48)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'getPoints' to 'GetPoints'.</defect>
      </target>
      <target Name="System.Boolean SmallWorld.Gallic::canMoveOn(System.Drawing.Point)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Boolean SmallWorld.Gallic::canMoveOn(System.Drawing.Point)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Gallic.cs(≈67)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'canMoveOn' to 'CanMoveOn'.</defect>
      </target>
      <target Name="System.Void SmallWorld.IGame::initPlayer(System.Int32,System.String,SmallWorld.NationType)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Void SmallWorld.IGame::initPlayer(System.Int32,System.String,SmallWorld.NationType)" Source="">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'initPlayer' to 'InitPlayer'.</defect>
      </target>
      <target Name="System.Void SmallWorld.IGame::createMap(System.Int32)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Void SmallWorld.IGame::createMap(System.Int32)" Source="">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'createMap' to 'CreateMap'.</defect>
      </target>
      <target Name="System.Void SmallWorld.IGame::placePlayers()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Void SmallWorld.IGame::placePlayers()" Source="">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'placePlayers' to 'PlacePlayers'.</defect>
      </target>
      <target Name="System.Void SmallWorld.IGame::determinePlayOrder()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Void SmallWorld.IGame::determinePlayOrder()" Source="">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'determinePlayOrder' to 'DeterminePlayOrder'.</defect>
      </target>
      <target Name="System.Boolean SmallWorld.IGame::isFinished()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Boolean SmallWorld.IGame::isFinished()" Source="">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'isFinished' to 'IsFinished'.</defect>
      </target>
      <target Name="System.Void SmallWorld.Game::initGame(System.Int32,System.Int32)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Void SmallWorld.Game::initGame(System.Int32,System.Int32)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Game.cs(≈107)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'initGame' to 'InitGame'.</defect>
      </target>
      <target Name="System.Void SmallWorld.Game::initPlayer(System.Int32,System.String,SmallWorld.NationType)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Void SmallWorld.Game::initPlayer(System.Int32,System.String,SmallWorld.NationType)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Game.cs(≈124)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'initPlayer' to 'InitPlayer'.</defect>
      </target>
      <target Name="System.Void SmallWorld.Game::createMap(System.Int32)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Void SmallWorld.Game::createMap(System.Int32)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Game.cs(≈146)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'createMap' to 'CreateMap'.</defect>
      </target>
      <target Name="System.Void SmallWorld.Game::placePlayers()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Void SmallWorld.Game::placePlayers()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Game.cs(≈155)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'placePlayers' to 'PlacePlayers'.</defect>
      </target>
      <target Name="System.Void SmallWorld.Game::determinePlayOrder()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Void SmallWorld.Game::determinePlayOrder()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Game.cs(≈175)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'determinePlayOrder' to 'DeterminePlayOrder'.</defect>
      </target>
      <target Name="System.Void SmallWorld.Game::endRound()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Void SmallWorld.Game::endRound()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Game.cs(≈189)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'endRound' to 'EndRound'.</defect>
      </target>
      <target Name="System.Boolean SmallWorld.Game::isFinished()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Boolean SmallWorld.Game::isFinished()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Game.cs(≈213)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'isFinished' to 'IsFinished'.</defect>
      </target>
      <target Name="System.Void SmallWorld.Game::saveCurrentGame(System.String)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Void SmallWorld.Game::saveCurrentGame(System.String)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Game.cs(≈273)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'saveCurrentGame' to 'SaveCurrentGame'.</defect>
      </target>
      <target Name="System.Void SmallWorld.Game::restoreGame(System.String)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Void SmallWorld.Game::restoreGame(System.String)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Game.cs(≈288)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'restoreGame' to 'RestoreGame'.</defect>
      </target>
      <target Name="System.Void SmallWorld.IMap::generateMap(System.Int32)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Void SmallWorld.IMap::generateMap(System.Int32)" Source="">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'generateMap' to 'GenerateMap'.</defect>
      </target>
      <target Name="SmallWorld.ICase SmallWorld.IMap::getCase(System.Drawing.Point)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="SmallWorld.ICase SmallWorld.IMap::getCase(System.Drawing.Point)" Source="">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'getCase' to 'GetCase'.</defect>
      </target>
      <target Name="System.Drawing.Point[] SmallWorld.IMap::getStartPoints()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Drawing.Point[] SmallWorld.IMap::getStartPoints()" Source="">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'getStartPoints' to 'GetStartPoints'.</defect>
      </target>
      <target Name="System.Void SmallWorld.IMap::initUnits(System.Collections.Generic.List`1&lt;SmallWorld.IUnit&gt;,System.Drawing.Point)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Void SmallWorld.IMap::initUnits(System.Collections.Generic.List`1&lt;SmallWorld.IUnit&gt;,System.Drawing.Point)" Source="">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'initUnits' to 'InitUnits'.</defect>
      </target>
      <target Name="System.Collections.Generic.List`1&lt;SmallWorld.IUnit&gt; SmallWorld.IMap::getUnits(System.Drawing.Point)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Collections.Generic.List`1&lt;SmallWorld.IUnit&gt; SmallWorld.IMap::getUnits(System.Drawing.Point)" Source="">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'getUnits' to 'GetUnits'.</defect>
      </target>
      <target Name="SmallWorld.IUnit SmallWorld.IMap::getBestDefensiveUnit(System.Drawing.Point)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="SmallWorld.IUnit SmallWorld.IMap::getBestDefensiveUnit(System.Drawing.Point)" Source="">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'getBestDefensiveUnit' to 'GetBestDefensiveUnit'.</defect>
      </target>
      <target Name="SmallWorld.IUnit SmallWorld.INation::fabricUnit(System.Int32)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="SmallWorld.IUnit SmallWorld.INation::fabricUnit(System.Int32)" Source="">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'fabricUnit' to 'FabricUnit'.</defect>
      </target>
      <target Name="System.Boolean SmallWorld.INation::hasUnit(SmallWorld.IUnit)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Boolean SmallWorld.INation::hasUnit(SmallWorld.IUnit)" Source="">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'hasUnit' to 'HasUnit'.</defect>
      </target>
      <target Name="System.Int32 SmallWorld.IPlayer::computePoints()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.IPlayer::computePoints()" Source="">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'computePoints' to 'ComputePoints'.</defect>
      </target>
      <target Name="System.Int32 SmallWorld.IPlayer::getNbUnitsToPlay()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.IPlayer::getNbUnitsToPlay()" Source="">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'getNbUnitsToPlay' to 'GetNbUnitsToPlay'.</defect>
      </target>
      <target Name="System.Void SmallWorld.IPlayer::buryUnit(SmallWorld.IUnit)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Void SmallWorld.IPlayer::buryUnit(SmallWorld.IUnit)" Source="">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'buryUnit' to 'BuryUnit'.</defect>
      </target>
      <target Name="System.Void SmallWorld.Map::generateMap(System.Int32)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Void SmallWorld.Map::generateMap(System.Int32)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Map\Map.cs(≈93)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'generateMap' to 'GenerateMap'.</defect>
      </target>
      <target Name="SmallWorld.ICase SmallWorld.Map::getCaseTypeInstance(System.Int32)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="SmallWorld.ICase SmallWorld.Map::getCaseTypeInstance(System.Int32)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Map\Map.cs(≈119)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'getCaseTypeInstance' to 'GetCaseTypeInstance'.</defect>
      </target>
      <target Name="System.Drawing.Point[] SmallWorld.Map::getStartPoints()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Drawing.Point[] SmallWorld.Map::getStartPoints()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Map\Map.cs(≈135)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'getStartPoints' to 'GetStartPoints'.</defect>
      </target>
      <target Name="System.Int32 SmallWorld.Map::getIndexFromPoint(System.Drawing.Point)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.Map::getIndexFromPoint(System.Drawing.Point)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Map\Map.cs(≈188)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'getIndexFromPoint' to 'GetIndexFromPoint'.</defect>
      </target>
      <target Name="SmallWorld.ICase SmallWorld.Map::getCase(System.Drawing.Point)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="SmallWorld.ICase SmallWorld.Map::getCase(System.Drawing.Point)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Map\Map.cs(≈205)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'getCase' to 'GetCase'.</defect>
      </target>
      <target Name="System.Collections.Generic.List`1&lt;SmallWorld.IUnit&gt; SmallWorld.Map::getUnits(System.Drawing.Point)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Collections.Generic.List`1&lt;SmallWorld.IUnit&gt; SmallWorld.Map::getUnits(System.Drawing.Point)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Map\Map.cs(≈216)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'getUnits' to 'GetUnits'.</defect>
      </target>
      <target Name="System.Void SmallWorld.Map::initUnits(System.Collections.Generic.List`1&lt;SmallWorld.IUnit&gt;,System.Drawing.Point)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Void SmallWorld.Map::initUnits(System.Collections.Generic.List`1&lt;SmallWorld.IUnit&gt;,System.Drawing.Point)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Map\Map.cs(≈234)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'initUnits' to 'InitUnits'.</defect>
      </target>
      <target Name="SmallWorld.IUnit SmallWorld.Map::getBestDefensiveUnit(System.Drawing.Point)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="SmallWorld.IUnit SmallWorld.Map::getBestDefensiveUnit(System.Drawing.Point)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Map\Map.cs(≈250)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'getBestDefensiveUnit' to 'GetBestDefensiveUnit'.</defect>
      </target>
      <target Name="SmallWorld.IUnit SmallWorld.Nation::fabricUnit(System.Int32)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="SmallWorld.IUnit SmallWorld.Nation::fabricUnit(System.Int32)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Nation.cs(≈20)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'fabricUnit' to 'FabricUnit'.</defect>
      </target>
      <target Name="System.Boolean SmallWorld.Nation::hasUnit(SmallWorld.IUnit)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Boolean SmallWorld.Nation::hasUnit(SmallWorld.IUnit)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Nation.cs(≈20)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'hasUnit' to 'HasUnit'.</defect>
      </target>
      <target Name="SmallWorld.IUnit SmallWorld.NationDwarf::fabricUnit(System.Int32)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="SmallWorld.IUnit SmallWorld.NationDwarf::fabricUnit(System.Int32)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\NationDwarf.cs(≈28)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'fabricUnit' to 'FabricUnit'.</defect>
      </target>
      <target Name="System.Boolean SmallWorld.NationDwarf::hasUnit(SmallWorld.IUnit)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Boolean SmallWorld.NationDwarf::hasUnit(SmallWorld.IUnit)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\NationDwarf.cs(≈33)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'hasUnit' to 'HasUnit'.</defect>
      </target>
      <target Name="SmallWorld.IUnit SmallWorld.NationGallic::fabricUnit(System.Int32)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="SmallWorld.IUnit SmallWorld.NationGallic::fabricUnit(System.Int32)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\NationGallic.cs(≈27)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'fabricUnit' to 'FabricUnit'.</defect>
      </target>
      <target Name="System.Boolean SmallWorld.NationGallic::hasUnit(SmallWorld.IUnit)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Boolean SmallWorld.NationGallic::hasUnit(SmallWorld.IUnit)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\NationGallic.cs(≈32)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'hasUnit' to 'HasUnit'.</defect>
      </target>
      <target Name="SmallWorld.IUnit SmallWorld.NationViking::fabricUnit(System.Int32)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="SmallWorld.IUnit SmallWorld.NationViking::fabricUnit(System.Int32)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\NationViking.cs(≈28)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'fabricUnit' to 'FabricUnit'.</defect>
      </target>
      <target Name="System.Boolean SmallWorld.NationViking::hasUnit(SmallWorld.IUnit)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Boolean SmallWorld.NationViking::hasUnit(SmallWorld.IUnit)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\NationViking.cs(≈33)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'hasUnit' to 'HasUnit'.</defect>
      </target>
      <target Name="System.Int32 SmallWorld.Player::computePoints()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.Player::computePoints()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Player.cs(≈70)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'computePoints' to 'ComputePoints'.</defect>
      </target>
      <target Name="System.Int32 SmallWorld.Player::getNbUnitsToPlay()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.Player::getNbUnitsToPlay()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Player.cs(≈83)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'getNbUnitsToPlay' to 'GetNbUnitsToPlay'.</defect>
      </target>
      <target Name="System.Void SmallWorld.Player::buryUnit(SmallWorld.IUnit)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Void SmallWorld.Player::buryUnit(SmallWorld.IUnit)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Player.cs(≈98)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'buryUnit' to 'BuryUnit'.</defect>
      </target>
      <target Name="System.Int32 SmallWorld.Viking::getPoints()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Int32 SmallWorld.Viking::getPoints()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Viking.cs(≈33)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'getPoints' to 'GetPoints'.</defect>
      </target>
      <target Name="System.Boolean SmallWorld.Viking::isNearWater()" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Boolean SmallWorld.Viking::isNearWater()" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Viking.cs(≈45)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'isNearWater' to 'IsNearWater'.</defect>
      </target>
      <target Name="System.Boolean SmallWorld.Viking::canMoveOn(System.Drawing.Point)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Boolean SmallWorld.Viking::canMoveOn(System.Drawing.Point)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Units\Viking.cs(≈79)">By existing naming conventions, all the method and property names should all be pascal-cased (e.g. MyOperation). Rename 'canMoveOn' to 'CanMoveOn'.</defect>
      </target>
    </rule>
    <rule Name="WriteStaticFieldFromInstanceMethodRule" Uri="https://github.com/spouliot/gendarme/wiki/Gendarme.Rules.Concurrency.WriteStaticFieldFromInstanceMethodRule(2.10)">
      <problem>This instance method writes to static fields. This may cause problem with multiple instances in multithreaded applications.</problem>
      <solution>Move initialization to the static constructor or ensure appropriate locking.</solution>
      <target Name="System.Void SmallWorld.Game::.ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Assembly="SmallWorldCore, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null">
        <defect Severity="Medium" Confidence="High" Location="System.Void SmallWorld.Game::.ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" Source="d:\Cours\INSA\4INFO\smallworld\SmallWorld\LibModele\Core\Game.cs(≈265)">The static field 'instance', of type 'SmallWorld.Game'. is being set in an instance method.</defect>
      </target>
    </rule>
  </results>
</gendarme-output>